$scope - this is like a global variable

controllers are what bind our models to our views

namespacing: controls our variables in a js file

var mynamespace = angular.module('myapp', []);

namespace.controller('mycontroller', function(){
	$scope.author = {
		name: "ngugiephy",
		title: "",
		company: ""
	}
});

there is an issue with the chrome browser when loading a json file from your local computer (this is only an issue with chrome alone).
this is because chrome has a policy that when you request data it has to come from the same server that requested it. and that is also because ajax communication is meant to happen between a client and a server

solution:
	1. use a different browser
	2. load your application onto a server. as long as it's in a server, chrome will have no problem
	3. install a server onto your machine 
		a. LAMP, WAMP
		b. node js
	4. trick chrome into allowing the files


For purposes of good file management and development logistics, it could be useful to put your data into json files, eg
	[
		{
			name: "ngugiephy",
			title: "",
			company: ""
		},
		{
			name: "ngugiephy",
			title: "",
			company: ""
		},
		{
			name: "ngugiephy",
			title: "",
			company: ""
		}
	]
then pul them in with a http request
	var myapp = angular.module('myapp', []);

	myapp.controller('mycontroller', function mycontroller($scope, $http){
		$http.get('path/to/data.json').success(function(data){
			$scope.artists = data
		})
	});

from the same code above, saving the files from minification issues:
	var myapp = angular.module('myapp', []);

	myapp.controller('mycontroller', [$scope, $http, function($scope, $http){
		$http.get('path/to/data.json').success(function(data){
			$scope.artists = data
		})
	}]);

//working with http service makes your app alot smaller and easier to update in the future

//filters are easy and they do infact work quite efficiently
	{{item.name | uppercase}} : makes the names all uppercase
	ng-repeat="item in artists | limitTo:5" : limits the no of records received to only 5 results

data binding:
	very interesting. could come very handy in the dalcom website for checking numberplates